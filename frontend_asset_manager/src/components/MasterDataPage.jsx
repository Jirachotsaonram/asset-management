import React, { useState, useEffect } from 'react';
import { getLocations, updateLocation } from '../api/api'; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏° updateLocation ‡πÉ‡∏ô api.js ‡πÅ‡∏•‡πâ‡∏ß

const MasterDataPage = () => {
    const [locations, setLocations] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState(null);
    const [editingId, setEditingId] = useState(null); // ID ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    const [editForm, setEditForm] = useState({}); // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç

    useEffect(() => {
        fetchLocations();
    }, []);

    const fetchLocations = async () => {
        try {
            const data = await getLocations(); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å manage_locations.php (GET)
            setLocations(data);
        } catch (err) {
            setError(err.message);
        } finally {
            setIsLoading(false);
        }
    };

    // ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    const handleEditClick = (location) => {
        setEditingId(location.location_id);
        // ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        setEditForm({ 
            location_id: location.location_id,
            building_name: location.building_name, 
            room_number: location.room_number,
            description: location.description 
        });
    };

    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    const handleChange = (e) => {
        const { name, value } = e.target;
        setEditForm(prev => ({ ...prev, [name]: value }));
    };

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    const handleSave = async (e) => {
        e.preventDefault();
        setIsLoading(true);
        setError(null);
        try {
            // ‡πÉ‡∏ä‡πâ API ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ manage_locations.php (PUT/POST)
            // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô updateLocation ‡πÉ‡∏ô api.js
            await updateLocation(editForm); 
            
            alert('‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
            setEditingId(null); // ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
            await fetchLocations(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        } catch (err) {
            setError(err.message);
        } finally {
            setIsLoading(false);
        }
    };
    
    // (*** ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleDelete ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö manage_locations.php (DELETE) ‡πÄ‡∏≠‡∏á ***)

    if (isLoading) return <div style={{ padding: '20px' }}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>;
    if (error) return <div style={{ padding: '20px', color: 'red' }}>Error: {error}</div>;

    return (
        <div style={{ padding: '20px' }}>
            <h2>üõ†Ô∏è ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á (Locations)</h2>
            <button style={{ marginBottom: '15px', padding: '10px' }}>+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡∏°‡πà</button> 
            
            <table style={{ width: '100%', borderCollapse: 'collapse' }}>
                <thead>
                    <tr style={{ backgroundColor: '#f2f2f2' }}>
                        <th style={tableHeaderStyle}>ID</th>
                        <th style={tableHeaderStyle}>‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£</th>
                        <th style={tableHeaderStyle}>‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç</th>
                        <th style={tableHeaderStyle}>‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢</th>
                        <th style={tableHeaderStyle}>‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</th>
                    </tr>
                </thead>
                <tbody>
                    {locations.map((loc) => (
                        <tr key={loc.location_id}>
                            {editingId === loc.location_id ? (
                                // ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°)
                                <tr style={{ backgroundColor: '#fffbe6' }}>
                                    <td style={tableCellStyle}>{loc.location_id}</td>
                                    <td style={tableCellStyle}>
                                        <input type="text" name="building_name" value={editForm.building_name} onChange={handleChange} />
                                    </td>
                                    <td style={tableCellStyle}>
                                        <input type="text" name="room_number" value={editForm.room_number} onChange={handleChange} />
                                    </td>
                                    <td style={tableCellStyle}>
                                        <input type="text" name="description" value={editForm.description} onChange={handleChange} />
                                    </td>
                                    <td style={tableCellStyle}>
                                        <button onClick={handleSave} style={{ marginRight: '5px' }}>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
                                        <button onClick={() => setEditingId(null)}>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
                                    </td>
                                </tr>
                            ) : (
                                // ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏õ‡∏Å‡∏ï‡∏¥
                                <>
                                    <td style={tableCellStyle}>{loc.location_id}</td>
                                    <td style={tableCellStyle}>{loc.building_name}</td>
                                    <td style={tableCellStyle}>{loc.room_number}</td>
                                    <td style={tableCellStyle}>{loc.description}</td>
                                    <td style={tableCellStyle}>
                                        <button onClick={() => handleEditClick(loc)} style={{ marginRight: '5px' }}>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                                        <button onClick={() => alert('‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°')}>‡∏•‡∏ö</button>
                                    </td>
                                </>
                            )}
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
};

const tableHeaderStyle = { border: '1px solid #ddd', padding: '12px', textAlign: 'left' };
const tableCellStyle = { border: '1px solid #ddd', padding: '10px' };

export default MasterDataPage;