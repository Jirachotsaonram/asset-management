import React, { useState } from 'react';
import { getAssetByBarcode, recordAssetCheck, recordAssetMove } from '../api/api';

// ‡∏™‡∏°‡∏°‡∏ï‡∏¥: user_id ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà (‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å localStorage/Context)
const INSPECTOR_USER_ID = 2; 
const DEFAULT_LOCATION_ID = 1; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥: ID ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

const InspectorScanView = () => {
    const [barcode, setBarcode] = useState('');
    const [asset, setAsset] = useState(null);
    const [status, setStatus] = useState('‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ'); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö check_status
    const [remark, setRemark] = useState('');
    const [newLocationId, setNewLocationId] = useState(DEFAULT_LOCATION_ID); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡πâ‡∏≤‡∏¢‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå
    const [message, setMessage] = useState('');
    const [loading, setLoading] = useState(false);

    // 1. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô (‡πÉ‡∏ô React Native ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á)
    const handleScan = async () => {
        if (!barcode) return;
        setLoading(true);
        setMessage('');
        try {
            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API get_asset_by_barcode.php
            const assetData = await getAssetByBarcode(barcode);
            setAsset(assetData);
            setMessage(`‡∏û‡∏ö‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå: ${assetData.asset_name}`);
        } catch (err) {
            setMessage(err.message);
            setAsset(null);
        } finally {
            setLoading(false);
        }
    };

    // 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö (check_asset.php)
    const handleRecordCheck = async () => {
        if (!asset) {
            setMessage('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πÅ‡∏Å‡∏ô‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•');
            return;
        }
        setLoading(true);
        try {
            const checkData = {
                asset_id: asset.asset_id,
                user_id: INSPECTOR_USER_ID,
                check_status: status,
                remark: remark
            };
            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API check_asset.php
            await recordAssetCheck(checkData);
            setMessage(`‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${status}`);
            setRemark('');
        } catch (err) {
            setMessage(`‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${err.message}`);
        } finally {
            setLoading(false);
        }
    };
    
    // 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢ (move_asset.php)
    const handleRecordMove = async () => {
        if (!asset || asset.location_id == newLocationId) {
            setMessage('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå');
            return;
        }
        setLoading(true);
        try {
            const moveData = {
                asset_id: asset.asset_id,
                new_location_id: newLocationId,
                moved_by: INSPECTOR_USER_ID,
                remark: `‡∏¢‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á ${asset.room_number}` // ‡πÉ‡∏ä‡πâ remark ‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á check
            };
            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API move_asset.php
            await recordAssetMove(moveData);
            setMessage(`üöö ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Location ID: ${newLocationId}`);
            setRemark('');
        } catch (err) {
            setMessage(`‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${err.message}`);
        } finally {
            setLoading(false);
        }
    };

    return (
        <div style={{ padding: '20px', maxWidth: '600px', margin: 'auto', border: '1px solid #ddd' }}>
            <h2>üì± Inspector View: ‡∏™‡πÅ‡∏Å‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</h2>
            
            {/* ‡∏™‡πà‡∏ß‡∏ô 1: ‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô */}
            <div style={{ marginBottom: '20px' }}>
                <label>‡∏£‡∏´‡∏±‡∏™ QR/Barcode:</label>
                <input
                    type="text"
                    value={barcode}
                    onChange={(e) => setBarcode(e.target.value)}
                    placeholder="‡∏õ‡πâ‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå (‡πÄ‡∏ä‡πà‡∏ô QR1001)"
                    style={{ width: '70%', padding: '10px' }}
                />
                <button onClick={handleScan} disabled={loading} style={{ padding: '10px', width: '25%', marginLeft: '5%' }}>
                    {loading ? '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...' : '‡∏™‡πÅ‡∏Å‡∏ô/‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤'}
                </button>
            </div>

            {/* ‡∏™‡πà‡∏ß‡∏ô 2: ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå/‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */}
            {message && <p style={{ color: asset ? 'green' : 'red', fontWeight: 'bold' }}>{message}</p>}
            
            {/* ‡∏™‡πà‡∏ß‡∏ô 3: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå‡πÅ‡∏•‡∏∞‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏• */}
            {asset && (
                <div style={{ borderTop: '1px solid #ccc', paddingTop: '15px' }}>
                    <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå: {asset.asset_name}</h3>
                    <p><strong>ID/S/N:</strong> {asset.asset_id} / {asset.serial_number}</p>
                    <p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong> {asset.building_name} / {asset.room_number}</p>
                    <p><strong>‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô:</strong> {asset.department_name}</p>
                    <p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong> <span style={{ color: asset.status === '‡∏ä‡∏≥‡∏£‡∏∏‡∏î' ? 'red' : 'green' }}>{asset.status}</span></p>

                    <h4 style={{ marginTop: '20px' }}>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</h4>
                    
                    {/* ‡∏ü‡∏≠‡∏£‡πå‡∏° Check Status */}
                    <Select label="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏û‡∏ö:" name="status" value={status} onChange={(e) => setStatus(e.target.value)}>
                        {['‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ', '‡∏ä‡∏≥‡∏£‡∏∏‡∏î', '‡∏£‡∏≠‡∏ã‡πà‡∏≠‡∏°', '‡∏™‡∏π‡∏ç‡∏´‡∏≤‡∏¢'].map(s => <option key={s} value={s}>{s}</option>)}
                    </Select>
                    <TextArea label="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ):" value={remark} onChange={(e) => setRemark(e.target.value)} />
                    
                    <button onClick={handleRecordCheck} disabled={loading} style={{ padding: '12px', width: '100%', marginTop: '10px', backgroundColor: '#007bff', color: 'white' }}>
                        ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ({status})
                    </button>
                    
                    <h4 style={{ marginTop: '30px' }}>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢</h4>
                    
                    {/* ‡∏ü‡∏≠‡∏£‡πå‡∏° Move Asset */}
                    <Input label="‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏¢‡∏±‡∏á Location ID:" name="newLocationId" type="number" value={newLocationId} onChange={(e) => setNewLocationId(parseInt(e.target.value))} />
                    
                    <button onClick={handleRecordMove} disabled={loading || asset.location_id == newLocationId} style={{ padding: '12px', width: '100%', marginTop: '10px', backgroundColor: '#ffc107', color: 'black' }}>
                        ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå
                    </button>
                </div>
            )}
        </div>
    );
};

// Component ‡∏¢‡πà‡∏≠‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Input/Select
const Select = ({ label, children, ...props }) => (
    <div style={{marginBottom: '10px'}}>
        <label style={{ display: 'block', marginBottom: '5px' }}>{label}</label>
        <select {...props} style={{ width: '100%', padding: '10px', boxSizing: 'border-box' }}>
            {children}
        </select>
    </div>
);
const Input = ({ label, ...props }) => (
    <div style={{marginBottom: '10px'}}>
        <label style={{ display: 'block', marginBottom: '5px' }}>{label}</label>
        <input {...props} style={{ width: '100%', padding: '10px', boxSizing: 'border-box' }} />
    </div>
);
const TextArea = ({ label, ...props }) => (
    <div style={{marginBottom: '10px'}}>
        <label style={{ display: 'block', marginBottom: '5px' }}>{label}</label>
        <textarea {...props} style={{ width: '100%', padding: '10px', boxSizing: 'border-box' }} />
    </div>
);


export default InspectorScanView;